---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-alerts
  namespace: kube-prom-stack
  labels:
    grafana_alert: "1"
data:
  # language=yaml
  policy.yaml: |-
    apiVersion: 1
    policies:
        - orgId: 1
          receiver: grafana-default-email
          group_by:
            - alertname
          routes:
            - receiver: tme-notifications-bot
              object_matchers:
                - - telegram
                  - =
                  - "true"
  # language=yaml
  message.yaml: |-
    templates:
      - orgID: 1
        name: telegram_message
        template: |-
          {{ define "telegram_message" }}
            {{ if gt (len .Alerts.Firing) 0 }}
            <b>ðŸ”¥ {{ len .Alerts.Firing }} alert(s) firing:</b>
              {{ range .Alerts.Firing }} {{ template "telegram_alert_firing" .}} {{ end }} {{ end }}
            {{ if gt (len .Alerts.Resolved) 0 }}
            <b>âœ… {{ len .Alerts.Resolved }} alert(s) resolved:</b>
              {{ range .Alerts.Resolved }} {{ template "telegram_alert_resolved" .}} {{ end }} {{ end }}
          {{ end }}
          
          {{ define "telegram_alert_firing" }}
            <b>{{ .Labels.alertname }}</b>
            {{ if .Annotations -}}
              <b>Summary<b>: {{ .Annotations.summary}}
              <b>Description<b>: {{ .Annotations.description }}
            {{ end -}}
          
            {{ .Annotations.AlertValues }}
            <a href="https://{grafana_URL}/alerting/silence/new?matcher=alertname%3D{{ .Labels.alertname }}">Silence this alert</a>
            <a href="https://{grafana_URL}/d/{dashboard_id/name}">Access dashboard</a>
          {{ end }}
          
            {{ define "telegram_alert_resolved" }}
            <b>{{ .Labels.alertname }}</b>
            
            {{ if .Annotations -}}
              <b>Summary<b>: {{ .Annotations.summary}}
              <b>Description<b>: {{ .Annotations.description }}
            {{ end -}}
            <a href="https://{grafana_URL}/d/{dashboard_id/name}">Access dashboard</a>
          {{ end }}
  # language=json
  restart.json: |-
    {
      "apiVersion": 1,
      "groups": [
        {
          "orgId": 1,
          "name": "default",
          "folder": "default",
          "interval": "30s",
          "rules": [
            {
              "uid": "fdlzr1acdyygwe",
              "title": "restart-loop",
              "condition": "C",
              "data": [
                {
                  "refId": "A",
                  "relativeTimeRange": {
                    "from": 600,
                    "to": 0
                  },
                  "datasourceUid": "prometheus",
                  "model": {
                    "editorMode": "code",
                    "expr": "(sum(increase(kube_pod_container_status_restarts_total[10m])) by (container))",
                    "instant": true,
                    "intervalMs": 1000,
                    "legendFormat": "__auto",
                    "maxDataPoints": 43200,
                    "range": false,
                    "refId": "A"
                  }
                },
                {
                  "refId": "C",
                  "relativeTimeRange": {
                    "from": 600,
                    "to": 0
                  },
                  "datasourceUid": "__expr__",
                  "model": {
                    "conditions": [
                      {
                        "evaluator": {
                          "params": [
                            1
                          ],
                          "type": "gt"
                        },
                        "operator": {
                          "type": "and"
                        },
                        "query": {
                          "params": [
                            "C"
                          ]
                        },
                        "reducer": {
                          "params": [],
                          "type": "last"
                        },
                        "type": "query"
                      }
                    ],
                    "datasource": {
                      "type": "__expr__",
                      "uid": "__expr__"
                    },
                    "expression": "A",
                    "intervalMs": 1000,
                    "maxDataPoints": 43200,
                    "refId": "C",
                    "type": "threshold"
                  }
                }
              ],
              "noDataState": "NoData",
              "execErrState": "Error",
              "for": "1m",
              "annotations": {
                "description": "",
                "runbook_url": "",
                "summary": ""
              },
              "labels": {
                "": "",
                "telegram": "true"
              },
              "isPaused": false
            }
          ]
        }
      ]
    }
