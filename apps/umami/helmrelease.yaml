---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app umami
  namespace: *app
spec:
  chart:
    spec:
      chart: app-template
      version: 3.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 5m
  releaseName: *app
  targetNamespace: *app
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          umami:
            image:
              repository: umamisoftware/umami
              tag: postgresql-v2.12.1
            env:
              TZ: Europe/Berlin
              DATABASE_TYPE: postgresql
            envFrom:
              - secret: umami-app-config
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 3000
                  initialDelaySeconds: 5
                  periodSeconds: 3
                  timeoutSeconds: 3
                  failureThreshold: 3
              startup:
                enabled: false
      database:
        containers:
          postgres:
            image:
              repository: postgres
              tag: 16.4-alpine
            env:
              TZ: Europe/Berlin
            envFrom:
              - secret: umami-db-config
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  exec:
                    command: [ "pg_isready" ,"-U" ,"$POSTGRES_USER" ]
                  initialDelaySeconds: 15
                  periodSeconds: 5
                  timeoutSeconds: 5
                  failureThreshold: 3

    service:
      main:
        controller: main
        ports:
          http:
            port: 3000
      database:
        controller: database
        ports:
          http:
            port: 5432
    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          cert-manager.io/cluster-issuer: "letsencrypt"
        hosts:
          - host: &host analytics.tmem.de
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: umami-tls
    persistence:
      config:
        enabled: true
        existingClaim: umami-config-pvc
        advancedMounts:
          database:
            postgres:
              - path: /var/lib/postgresql/data