---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app streamdock
  namespace: *app
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 5m
  releaseName: *app
  targetNamespace: *app
  values:
    controllers:
      streamdock:
        containers:
          app:
            image:
              repository: ghcr.io/limmer55/streamdock
              tag: dev
            env:
              TZ: Europe/Berlin
              HW_ACCEL: vaapi
              HW_DEVICE: /dev/dri/renderD128
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 6050
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  timeoutSeconds: 3
                  failureThreshold: 5
              readiness: *probes
              startup:
                enabled: false
          # Configure the gluetun sidecar
          gluetun:
            dependsOn: app
            image:
              repository: ghcr.io/qdm12/gluetun
              tag: v3.40.0
            env:
              TZ: Europe/Berlin
              FIREWALL: on
              FIREWALL_INPUT_PORTS: 6050,9999
              VPN_TYPE: wireguard
              VPN_SERVICE_PROVIDER: mullvad
              SERVER_COUNTRIES: Germany
              UPDATER_PERIOD: 12h
              DNS_KEEP_NAMESERVER: on
              OPENVPN_PASSWORD: m
              HEALTH_SERVER_ADDRESS: "0.0.0.0:9999"
            envFrom:
              - secret: streamdock-vpn-config
            # Configure the container-specific securityContext
            securityContext:
              capabilities:
                add:
                  - NET_ADMIN
                  - SYS_MODULE
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 9999
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 3
                  failureThreshold: 12
              startup:
                enabled: false
          # Configure redis
          redis:
            container_name: redis
            image: redis:alpine
            healthcheck:
              test: ["CMD", "redis-cli", "ping"]
              interval: 10s
              timeout: 5s
              retries: 5
    ingress:
      app:
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: 5G
          kubernetes.io/ingress.class: "nginx-internal"
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          cert-manager.io/cluster-issuer: "letsencrypt"
        hosts:
          - host: &host streamdock.internal.tmem.de
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: streamdock-tls
    persistence:
      vpn-config:
        enabled: true
        type: secret
        name: streamdock-vpn-config
        advancedMounts:
          streamdock:
            gluetun:
              - path: /gluetun/wireguard/
      amd-device:
        enabled: true
        type: hostPath
        hostPath: "/dev/dri"
        hostPathType: "Directory"
        globalMounts:
          - path: "/dev/dri"
    service:
      app:
        controller: *app
        ports:
          http:
            port: 6050
      gluetun:
        controller: *app
        ports:
          http:
            port: 9999
