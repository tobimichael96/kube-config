---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app calendar-helper
  namespace: *app
spec:
  chart:
    spec:
      chart: app-template
      version: 4.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 5m
  releaseName: *app
  targetNamespace: *app
  values:
    defaultPodOptions:
      imagePullSecrets:
        - name: ghcr-pull-secret
    controllers:
      main:
        strategy: "RollingUpdate"
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          frontend:
            image:
              repository: ghcr.io/tobimichael96/calendar-helper-frontend
              tag: latest
            env:
              TZ: Europe/Berlin
          backend:
            image:
              repository: ghcr.io/tobimichael96/calendar-helper-backend
              tag: latest
            env:
              TZ: Europe/Berlin
            envFrom:
              - configMapRef:
                  name: default
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 3000
                  initialDelaySeconds: 5
                  periodSeconds: 3
                  timeoutSeconds: 3
                  failureThreshold: 3
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 3000
                  initialDelaySeconds: 5
                  periodSeconds: 3
                  timeoutSeconds: 3
                  failureThreshold: 3
    service:
      frontend:
        controller: main
        ports:
          http:
            port: 3000
      backend:
        controller: main
        ports:
          http:
            port: 8000
    ingress:
      frontend:
        className: "nginx"
        annotations:
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          cert-manager.io/cluster-issuer: "letsencrypt"
          nginx.org/websocket-services: "frontend"
#          nginx.ingress.kubernetes.io/auth-response-headers: Authorization
#          nginx.ingress.kubernetes.io/auth-url: "https://oauth2.tmem.de/oauth2/auth"
#          nginx.ingress.kubernetes.io/auth-signin: "https://oauth2.tmem.de/oauth2/start?rd=$scheme://$host$request_uri"
        hosts:
          - host: &host calendar.tmem.de
            paths:
              - path: /api/
                pathType: Prefix
                service:
                  identifier: backend
                  port: http
              - path: /
                pathType: Prefix
                service:
                  identifier: frontend
                  port: http
        tls:
          - hosts:
              - *host
            secretName: calendar-tls
    persistence:
      data:
        existingClaim: calendar-helper-pvc
        advancedMounts:
          main:
            backend:
              - path: /data