apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin
  namespace: jellyfin
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 5G
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt"
    nginx.ingress.kubernetes.io/auth-response-headers: Authorization
    nginx.ingress.kubernetes.io/auth-url: "https://oauth2.tmem.de/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://oauth2.tmem.de/oauth2/start?rd=$scheme://$host$request_uri"
spec:
  tls:
    - hosts:
        - &p-host jellyfin.tmem.de
      secretName: jellyfin-tls
  rules:
    - host: *p-host
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jellyfin-app
                port:
                  number: 8096
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin-internal
  namespace: jellyfin
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 5G
    kubernetes.io/ingress.class: "nginx-internal"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt"
spec:
  tls:
    - hosts:
        - &i-host jellyfin.internal.tmem.de
      secretName: jellyfin-internal-tls
  rules:
    - host: *i-host
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jellyfin-app
                port:
                  number: 8096